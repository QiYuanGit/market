<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.haizhi.market.main.mapper.qiyuan.UserMapper">
  <resultMap id="BaseResultMap" type="cn.haizhi.market.main.bean.qiyuan.User">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_head_path" jdbcType="VARCHAR" property="userHeadPath" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="register" jdbcType="TIMESTAMP" property="register" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="default_address" jdbcType="VARCHAR" property="defaultAddress" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_name, user_password, user_head_path, signature, register, user_phone, 
    default_address
  </sql>
  <select id="selectByExample" parameterType="cn.haizhi.market.main.bean.qiyuan.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.haizhi.market.main.bean.qiyuan.User">
    insert into user (user_id, user_name, user_password, 
      user_head_path, signature, register, 
      user_phone, default_address)
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userHeadPath,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, #{register,jdbcType=TIMESTAMP}, 
      #{userPhone,jdbcType=VARCHAR}, #{defaultAddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.haizhi.market.main.bean.qiyuan.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userHeadPath != null">
        user_head_path,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="register != null">
        register,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="defaultAddress != null">
        default_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userHeadPath != null">
        #{userHeadPath,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="register != null">
        #{register,jdbcType=TIMESTAMP},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="defaultAddress != null">
        #{defaultAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.haizhi.market.main.bean.qiyuan.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="cn.haizhi.market.main.bean.qiyuan.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userHeadPath != null">
        user_head_path = #{userHeadPath,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="register != null">
        register = #{register,jdbcType=TIMESTAMP},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="defaultAddress != null">
        default_address = #{defaultAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.haizhi.market.main.bean.qiyuan.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_head_path = #{userHeadPath,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      register = #{register,jdbcType=TIMESTAMP},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      default_address = #{defaultAddress,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>